name: Github-Docker Hub MLOps pipeline - Wahib

env:
  DOCKER_USER: ${{ secrets.DOCKER_USER }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  REPO_NAME: ${{ secrets.REPO_NAME }}

# Event Triggers:
# The pipeline is triggered whenever there is a push to the main branch.
# It is also triggered whenever there is a pull request to the main branch.

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# this pipeline consists of a two jobs named ci_pipeline

jobs:
  ci_pipeline:
    runs-on: ubuntu-latest     # The job runs on the ubuntu-latest operating system

    steps:
      - uses: actions/checkout@v2  # The first step uses the actions/checkout@v2 action to clone the repository.
        with:
          fetch-depth: 0  # The fetch-depth: 0 parameter ensures that the complete commit history is fetched.

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9  # The second step sets up Python 3.9 by using the actions/setup-python@v2 action.

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi  # The third step installs the project dependencies.

      - name: Format
        run: black app.py  # The fourth step formats the app.py file using the black code formatter.

      - name: Lint
        run: pylint --disable=R,C app.py  # The fifth step performs linting on the app.py file using pylint.

      - name: Test
        run: python -m pytest -vv test.py  # The sixth step runs the tests using pytest.

  cd_pipeline:
    runs-on: ubuntu-latest
    needs: [ci_pipeline]

    steps:
      - uses: actions/checkout@v2

      - name: Docker login
        run: |  # Log into Docker Hub account
          docker login -u $DOCKER_USER -p $DOCKER_PASSWORD

      - name: Get current date  # Get the date of the build
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d--%H-%M-%S')"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build the Docker image  # Build the Docker image
        run: docker buildx build . --file Dockerfile --tag $DOCKER_USER/$REPO_NAME:${{ steps.date.outputs.date }}

      - name: Docker Push  # Push the Docker image to Docker Hub
        run: docker push $DOCKER_USER/$REPO_NAME:${{ steps.date.outputs.date }}
